- name: Install Nginx
  ansible.builtin.apt:
    name: nginx
    state: present

- name: Create SSL certificate directory
  ansible.builtin.file:
    path: /etc/nginx/ssl
    state: directory
    mode: 0755

- name: Copy provided SSL certificate
  ansible.builtin.copy:
    src: "{{ ssl_certificate_path }}"
    dest: "{{ cert_crt }}"
    mode: 0644
  when: ssl_certificate_path is defined

- name: Copy provided SSL certificate key
  ansible.builtin.copy:
    src: "{{ ssl_certificate_key_path }}"
    dest: "{{ cert_key }}"
    mode: 0600
  when: ssl_certificate_key_path is defined

- name: Install OpenSSL
  ansible.builtin.apt:
    name: openssl
    state: present
  when: not ssl_certificate_path is defined

- name: Generate self-signed SSL certificate
  ansible.builtin.command: >
    openssl req -new -nodes -x509
    -subj "/C=ES/ST=Madrid/L=Madrid/O=OpenNebulaSystemsSL/CN={{ domain_name }}"
    -days 365
    -keyout "{{ cert_key }}"
    -out "{{ cert_crt }}"
  args:
    creates: "{{ cert_crt }}"
  when: not ssl_certificate_key_path is defined

- name: Configure Nginx reverse proxy
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify:
    - Restart Nginx

- name: Ensure Nginx is running and enabled
  ansible.builtin.systemd:
    name: nginx
    state: started
    enabled: yes

- name: Fetch generated SSL certificate files
  ansible.builtin.fetch:
    src: "{{ item }}"
    dest: "{{ lookup('env', 'HOME') }}/.cognit_ssl_certs/"
    flat: yes
  loop:
    - "{{ cert_crt }}"
    - "{{ cert_key }}"
  when: not ssl_certificate_key_path is defined
