---
- name: Install dependencies
  ansible.builtin.apt:
    pkg:
      - docker.io
      - docker-compose
      - python3
    state: present
    update_cache: true

- name: Ensure Docker is started and enabled
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Run Docker Compose
  docker_compose:
    state: present
    recreate: always
    pull: yes
    project_name: cognit-ai-orchestrator
    definition:
      version: '3.8'
      services:
        timescaledb:
          image: timescale/timescaledb:latest-pg16
          environment:
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "opennebula"
            PGDATA: /var/lib/postgresql/data
            TZ: Europe/Stockholm
            TS_TUNE_MAX_CONNS: "1000"
          ports:
            - "5432:5432"
          volumes:
            - timescaledb_data:/var/lib/postgresql/data
        envserver:
          image: simonbonr/envserver
          depends_on:
            - timescaledb
          environment:
            ENVSERVER_TLS: "false"
            ENVSERVER_PORT: 50080
            ENVSERVER_DB_HOST: timescaledb
            ENVSERVER_DB_PORT: 5432
            ENVSERVER_DB_USER: "postgres"
            ENVSERVER_DB_PASSWORD: "opennebula"
            ENVSERVER_VERBOSE: "false"
            PROMETHEUS_HOST: "{{ prometheus }}"
            PROMETHEUS_PORT: 9090
            ML_HOST: mlserver
            ML_PORT: 50090
            ML_INSECURE: "true"
            TZ: Europe/Stockholm
          ports:
            - "50080:50080"
            - "4567:4567"
          command: sh -c "envcli server start --initdb --one"
        mlserver:
          image: simonbonr/mlserver
          depends_on:
            - timescaledb
            - envserver
          environment:
            ML_MODEL_PORT: 50090
            ONED_ADDR: "{{ oned }}"
            ONED_PASS: "{{ one_pass }}"
            ENVSERVER_DB_HOST: timescaledb
            ENVSERVER_DB_PORT: 5432
            ENVSERVER_DB_USER: "postgres"
            ENVSERVER_DB_PASSWORD: "opennebula"
            TZ: Europe/Stockholm
          ports:
            - "50090:50090"
          command: sh -c "python3 /MLServer/server.py"
      volumes:
        timescaledb_data:

