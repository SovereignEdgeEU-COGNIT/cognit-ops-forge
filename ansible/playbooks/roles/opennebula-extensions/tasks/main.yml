---
- name: Clone opennebula-extensions GitHub repository
  ansible.builtin.git:
    repo: "{{ repo_url }}"
    dest: "{{ repo_dest }}"
    version: "{{ one_extensions_version | default('main') }}"
  run_once: true

- name: Prometheus - Patch 1
  ansible.builtin.copy:
    src: "{{ repo_dest }}/prometheus/patch_datasources.rb"
    remote_src: true
    dest: /usr/share/one/patch_datasources.rb
    owner: root
    group: root
    mode: '0644'

- name: Prometheus - Patch 2
  ansible.builtin.copy:
    src: "{{ repo_dest }}/prometheus/vm_collector.rb"
    remote_src: true
    dest: /usr/lib/one/opennebula_exporter/opennebula_vm_collector.rb
    owner: root
    group: root
    mode: '0644'

- name: Check if prometheus_vm_discovery hook exists
  ansible.builtin.command: "onehook show host_geolocation"
  register: prometheus_vm_discovery
  changed_when: false
  failed_when: false

- name: Prometheus - VM Hook
  ansible.builtin.command: "onehook create {{ repo_dest }}/prometheus/vm.hook"
  register: hook_result
  failed_when: hook_result.rc != 0
  changed_when: hook_result.rc == 0
  when: prometheus_vm_discovery.rc == 0

- name: Geolocation - Logic
  ansible.builtin.copy:
    src: "{{ repo_dest }}/geolocation/geo.rb"
    remote_src: true
    dest: /usr/share/one/geo.rb
    owner: root
    group: root
    mode: '0644'

- name: Check if host_geolocation hook exists
  ansible.builtin.command: "onehook show host_geolocation"
  register: geolocation_check
  changed_when: false
  failed_when: false

- name: Geolocation - VM Hook
  ansible.builtin.command: "onehook create {{ repo_dest }}/geolocation/geo.hook"
  register: hook_result
  failed_when: hook_result.rc != 0
  changed_when: hook_result.rc == 0
  when: geolocation_check.rc == 0

- name: Delete opennebula-extensions GitHub repository
  ansible.builtin.file:
    path: "{{ repo_dest }}"
    state: absent
